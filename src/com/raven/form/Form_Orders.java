/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.raven.form;

import com.raven.swing.ScrollBar;
import com.raven.main.Order;
import com.raven.swing.TimePicker;
import com.raven.main.Menu;
import com.toedter.calendar.JDateChooser;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RAVEN
 */
public class Form_Orders extends javax.swing.JPanel {

    Order order;
    Menu menu;
    int orderID = -1;
    
    public Form_Orders() {
        initComponents();
        order = new Order();
        menu = new Menu();
        
        jScrollPane1.setVerticalScrollBar(new ScrollBar());
        jScrollPane1.getVerticalScrollBar().setBackground(Color.WHITE);
        jScrollPane1.getViewport().setBackground(Color.WHITE);
        
        jScrollPane2.setVerticalScrollBar(new ScrollBar());
        jScrollPane2.getVerticalScrollBar().setBackground(Color.WHITE);
        jScrollPane2.getViewport().setBackground(Color.WHITE);
   
        JPanel p = new JPanel();
        p.setBackground(Color.WHITE);
        jScrollPane1.setCorner(JScrollPane.UPPER_RIGHT_CORNER, p);
        
        setOrderTbl(order.getAll());
//        setCategoryComboBox();
        initDishComboBox();
    }

    public final void setOrderTbl(ResultSet rs) {
        DefaultTableModel dm = (DefaultTableModel) orderTbl.getModel();
        int rowCount = dm.getRowCount();

        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }

        try {
            while (rs.next()) {
                String orderID = rs.getString("orderID");
                String customer = rs.getString("customer");
                String dish = rs.getString("dish");
                String size = rs.getString("size");
                String pickupDate = rs.getString("pickupDate");
                String pickupTime = rs.getString("pickupTime");
                String status = rs.getString("status");

                // Create an array to hold data for each row, including buttons
                Object[] rowData = {orderID, customer, dish, size, pickupDate, pickupTime, status};

                // Add the row data to the table model
                dm.addRow(rowData);
            }
        } catch(SQLException e) {
            System.out.println(e);
        }
    }
    
    public final void initDishComboBox(){
        ResultSet menuData = menu.getAll();
        
        dishComboBox.removeAllItems();
        dishComboBox.addItem("");
        
        try{
           while(menuData.next()){
            dishComboBox.addItem(menuData.getString("menu"));
            }  
        }catch(SQLException e){
            System.out.println(e);
        }
    }
    
    private void clearFields() {
        customerTextField.setText("");
        dishComboBox.setSelectedIndex(0);
        sizeTextField.setText("");
        dateChooser.setDate(null);
        txt.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        timePicker = new com.raven.swing.TimePicker();
        jScrollPane2 = new javax.swing.JScrollPane();
        panelBorder1 = new com.raven.swing.PanelBorder();
        panelBorder2 = new com.raven.swing.PanelBorder();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderTbl = new com.raven.swing.Table();
        panelBorder3 = new com.raven.swing.PanelBorder();
        customerTextField = new javax.swing.JTextField();
        ingredientAddBtn = new com.raven.swing.ModernButton();
        ingredientUpdateBtn = new com.raven.swing.ModernButton();
        modernButton1 = new com.raven.swing.ModernButton();
        modernButton2 = new com.raven.swing.ModernButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        sizeTextField = new javax.swing.JTextField();
        dateChooser = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        txt = new javax.swing.JTextField();
        statusComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        dishComboBox = new javax.swing.JComboBox<>();

        timePicker.set24hourMode(false);
        timePicker.setDisplayText(txt);

        jScrollPane2.setBorder(null);
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelBorder2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(127, 127, 127));
        jLabel1.setText("ORDERS");

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);

        orderTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "OrderID", "Customer", "Dish", "Size", "Pick-up Date", "Pick-up Time", "Status"
            }
        ));
        orderTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(orderTbl);

        javax.swing.GroupLayout panelBorder2Layout = new javax.swing.GroupLayout(panelBorder2);
        panelBorder2.setLayout(panelBorder2Layout);
        panelBorder2Layout.setHorizontalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 814, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        panelBorder2Layout.setVerticalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        panelBorder3.setBackground(new java.awt.Color(255, 255, 255));

        ingredientAddBtn.setText("Add");
        ingredientAddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingredientAddBtnActionPerformed(evt);
            }
        });

        ingredientUpdateBtn.setText("Update");
        ingredientUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingredientUpdateBtnActionPerformed(evt);
            }
        });

        modernButton1.setText("Delete");
        modernButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modernButton1ActionPerformed(evt);
            }
        });

        modernButton2.setText("Search");
        modernButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modernButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Dish");

        jLabel3.setText("Customer");

        jLabel4.setText("Pick-up Date");

        jLabel5.setText("Pick-up Time");

        jLabel6.setText("Size");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/profit.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        statusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Pending", "Completed", "Cancelled" }));

        jLabel7.setText("Status");

        dishComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        javax.swing.GroupLayout panelBorder3Layout = new javax.swing.GroupLayout(panelBorder3);
        panelBorder3.setLayout(panelBorder3Layout);
        panelBorder3Layout.setHorizontalGroup(
            panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder3Layout.createSequentialGroup()
                .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(customerTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                            .addComponent(sizeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                            .addComponent(dishComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(43, 43, 43)
                        .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(statusComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panelBorder3Layout.createSequentialGroup()
                                .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelBorder3Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(ingredientAddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(ingredientUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(modernButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(modernButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        panelBorder3Layout.setVerticalGroup(
            panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder3Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder3Layout.createSequentialGroup()
                        .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7))
                    .addGroup(panelBorder3Layout.createSequentialGroup()
                        .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(dishComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(sizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6))))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ingredientUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ingredientAddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modernButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modernButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelBorder2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelBorder3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(232, Short.MAX_VALUE))
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
        );

        jScrollPane2.setViewportView(panelBorder1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 903, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ingredientAddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingredientAddBtnActionPerformed
        String customer = customerTextField.getText();
        String dish = dishComboBox.getSelectedItem().toString();
        String size = sizeTextField.getText();
        Date pickupDate = dateChooser.getDate();
        String pickupTime = txt.getText();
        String status = statusComboBox.getSelectedItem().toString();
        
        if(orderID!=0 
            && !customer.equals("") 
            && !dish.equals("") 
            && !size.equals("") 
            && pickupDate != null 
            && !pickupTime.equals("")
        ){
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String formattedDate = sdf.format(pickupDate);

            // Define input and output formats
            DateFormat inputFormat = new SimpleDateFormat("hh:mm a");
            DateFormat outputFormat = new SimpleDateFormat("HH:mm:ss");

            try {
                Date date = inputFormat.parse(pickupTime);
                String time24Hour = outputFormat.format(date);

                order.add(customer,dish,size,formattedDate, time24Hour, status);
                setOrderTbl(order.getAll());
                clearFields();
                JOptionPane.showMessageDialog(this, "Item successfully added.");
            } catch (Exception e) {
                System.out.println("Error occurred: " + e.getMessage());
            }
        }else{
            JOptionPane.showMessageDialog(this, "Please fill-up all fields.");
        }     
    }//GEN-LAST:event_ingredientAddBtnActionPerformed

    private void ingredientUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingredientUpdateBtnActionPerformed
        String customer = customerTextField.getText();
        String dish = dishComboBox.getSelectedItem().toString();
        String size = sizeTextField.getText();
        Date pickupDate = dateChooser.getDate();
        String pickupTime = txt.getText();
        String status = statusComboBox.getSelectedItem().toString();
          
        if(orderID!=0 
            && !customer.equals("") 
            && !dish.equals("") 
            && !size.equals("") 
            && pickupDate != null 
            && !pickupTime.equals("")
        ){
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String formattedDate = sdf.format(pickupDate);

            try {
                order.update(orderID, customer,dish,size,formattedDate, pickupTime, status);
                setOrderTbl(order.getAll());
                orderID = -1;
                clearFields();   
                JOptionPane.showMessageDialog(this, "Item successfully updated.");
            } catch (Exception e) {
                System.out.println("Error occurred: " + e.getMessage());
            } 
        }else{
            System.out.println("empty field detected");
            JOptionPane.showMessageDialog(this, "Please fill-up all fields.");
        }
    }//GEN-LAST:event_ingredientUpdateBtnActionPerformed

    private void modernButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modernButton2ActionPerformed
        String customer = customerTextField.getText();
        String dish = dishComboBox.getSelectedItem().toString();
        String size = sizeTextField.getText();
        Date pickupDate = dateChooser.getDate(); 
        String status = statusComboBox.getSelectedItem().toString();
        
        String formattedDate = null;
        if (pickupDate != null) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            formattedDate = sdf.format(pickupDate);
        }

        DateFormat inputFormat = new SimpleDateFormat("hh:mm a");
        DateFormat outputFormat = new SimpleDateFormat("HH:mm:ss");

        String time24Hour = null;
        try {
            String timeText = txt.getText();
            if (timeText != null && !timeText.isEmpty()) {
                Date date = inputFormat.parse(timeText);
                time24Hour = outputFormat.format(date);
            }

            ResultSet rs = order.search(customer, dish, formattedDate, time24Hour, status);
            setOrderTbl(rs);

            clearFields();

        } catch (Exception e) {
            System.out.println("Error occurred: " + e.getMessage());
        }
    }//GEN-LAST:event_modernButton2ActionPerformed

    private void modernButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modernButton1ActionPerformed
        if(orderID != -1){      
            int response = JOptionPane.showConfirmDialog(null, 
            "Are you sure you want to continue?", 
            "Warning", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.WARNING_MESSAGE);

            if (response == JOptionPane.YES_OPTION) {
                order.delete(orderID);
                setOrderTbl(order.getAll());
                orderID = -1;
                clearFields();
                JOptionPane.showMessageDialog(this, "Item successfully deleted.");
            }
        }else{
            System.out.println("No selected field");
        }      
    }//GEN-LAST:event_modernButton1ActionPerformed

    private void orderTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderTblMouseClicked
        // TODO add your handling code here:
        int selectedRow = orderTbl.getSelectedRow();
        
        orderID = Integer.parseInt(orderTbl.getValueAt(selectedRow, 0).toString());
        customerTextField.setText(orderTbl.getValueAt(selectedRow, 1).toString());
        dishComboBox.setSelectedItem(orderTbl.getValueAt(selectedRow, 2));
        sizeTextField.setText(orderTbl.getValueAt(selectedRow, 3).toString());
        txt.setText(orderTbl.getValueAt(selectedRow, 5).toString());
        statusComboBox.setSelectedItem(orderTbl.getValueAt(selectedRow, 6));
        
        String dateString = orderTbl.getValueAt(selectedRow, 4).toString();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        
        try {
            Date date = dateFormat.parse(dateString);
            dateChooser.setDate(date);
        } catch (ParseException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_orderTblMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        timePicker = new TimePicker();
        timePicker.now();
        timePicker.setDisplayText(txt);
  
    
    // Show the time picker popup
    timePicker.showPopup(this, 300, 1);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField customerTextField;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JComboBox<String> dishComboBox;
    private com.raven.swing.ModernButton ingredientAddBtn;
    private com.raven.swing.ModernButton ingredientUpdateBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.raven.swing.ModernButton modernButton1;
    private com.raven.swing.ModernButton modernButton2;
    private com.raven.swing.Table orderTbl;
    private com.raven.swing.PanelBorder panelBorder1;
    private com.raven.swing.PanelBorder panelBorder2;
    private com.raven.swing.PanelBorder panelBorder3;
    private javax.swing.JTextField sizeTextField;
    private javax.swing.JComboBox<String> statusComboBox;
    private com.raven.swing.TimePicker timePicker;
    private javax.swing.JTextField txt;
    // End of variables declaration//GEN-END:variables
}
