/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.raven.form;

import com.raven.swing.ScrollBar;
import com.raven.main.Ingredient;
import com.raven.main.Category;
import com.raven.main.Menu;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RAVEN
 */
public class Form_Ingredients extends javax.swing.JPanel {

    Ingredient ingredient;
    Category category;
    Menu menu;
    int ingredientID = -1;
    
    public Form_Ingredients() {
        initComponents();
        ingredient = new Ingredient();
        category = new Category();
        menu = new Menu();
        
        jScrollPane1.setVerticalScrollBar(new ScrollBar());
        jScrollPane1.getVerticalScrollBar().setBackground(Color.WHITE);
        jScrollPane1.getViewport().setBackground(Color.WHITE);
        
        jScrollPane2.setVerticalScrollBar(new ScrollBar());
        jScrollPane2.getVerticalScrollBar().setBackground(Color.WHITE);
        jScrollPane2.getViewport().setBackground(Color.WHITE);
   
        JPanel p = new JPanel();
        p.setBackground(Color.WHITE);
        jScrollPane1.setCorner(JScrollPane.UPPER_RIGHT_CORNER, p);
        
        setIngredientTbl(ingredient.getAll());
        setCategoryComboBox();
        setMenuComboBox();

        
    }

    public final void setIngredientTbl(ResultSet rs) {
        DefaultTableModel dm = (DefaultTableModel) ingredientTbl.getModel();
        int rowCount = dm.getRowCount();

        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }

        try {
            while (rs.next()) {
                String ingredientID = rs.getString("ingredientID");
                String ingredient = rs.getString("ingredient");
                String category = rs.getString("category");
                String quantity = rs.getString("quantity");
                String menu = rs.getString("menuList");

                // Create an array to hold data for each row, including buttons
                Object[] rowData = {ingredientID, ingredient, category, quantity, menu};

                // Add the row data to the table model
                dm.addRow(rowData);
            }
        } catch(SQLException e) {
            System.out.println(e);
        }
    }

    public final void setCategoryComboBox(){
        ResultSet rs = category.getAll();
        
        categoryComboBox.removeAllItems();
        categoryComboBox.addItem("");
        
        try{
            while(rs.next()){
                categoryComboBox.addItem(rs.getString("category"));
            } 
        }catch(SQLException e){
            System.out.println(e);
        } 
    }
    
//        public final void setMenuComboBox(){
//        ResultSet rs = menu.getAll();
//        
//        menuComboBox.removeAllItems();
//        menuComboBox.addItem("");
//        
//        try{
//            while(rs.next()){
//                menuComboBox.addItem(rs.getString("menu"));
//            } 
//        }catch(SQLException e){
//            System.out.println(e);
//        } 
//    }
    
    public final void setMenuComboBox(){
        ResultSet rs = menu.getAll();
        
        List<String> itemList = new ArrayList<String>();
        
        try{
            while(rs.next()){
                itemList.add(rs.getString("menu"));
            }
            
            menuComboBox.setItems(itemList);
        }catch(SQLException e){
            System.out.println(e);
        }
  
    }
    
    private void clearFields(){
        ingredientTextField.setText("");
        categoryComboBox.setSelectedIndex(0);
        qtyTextField.setText("");
//        menuComboBox.setSelectedIndex(0);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        timePicker1 = new com.raven.swing.TimePicker();
        jScrollPane2 = new javax.swing.JScrollPane();
        panelBorder1 = new com.raven.swing.PanelBorder();
        panelBorder2 = new com.raven.swing.PanelBorder();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ingredientTbl = new com.raven.swing.Table();
        panelBorder3 = new com.raven.swing.PanelBorder();
        qtyTextField = new javax.swing.JTextField();
        ingredientTextField = new javax.swing.JTextField();
        categoryComboBox = new javax.swing.JComboBox<>();
        ingredientAddBtn = new com.raven.swing.ModernButton();
        ingredientUpdateBtn = new com.raven.swing.ModernButton();
        modernButton1 = new com.raven.swing.ModernButton();
        modernButton2 = new com.raven.swing.ModernButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        menuComboBox = new com.raven.swing.MultiSelectComboBox();

        jScrollPane2.setBorder(null);
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelBorder2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(127, 127, 127));
        jLabel1.setText("INGREDIENTS");

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);

        ingredientTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "IngredientID", "Ingredient", "Category", "Quantity", "Menu"
            }
        ));
        ingredientTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingredientTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ingredientTbl);

        javax.swing.GroupLayout panelBorder2Layout = new javax.swing.GroupLayout(panelBorder2);
        panelBorder2.setLayout(panelBorder2Layout);
        panelBorder2Layout.setHorizontalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 814, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        panelBorder2Layout.setVerticalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        panelBorder3.setBackground(new java.awt.Color(255, 255, 255));

        categoryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        ingredientAddBtn.setText("Add");
        ingredientAddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingredientAddBtnActionPerformed(evt);
            }
        });

        ingredientUpdateBtn.setText("Update");
        ingredientUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingredientUpdateBtnActionPerformed(evt);
            }
        });

        modernButton1.setText("Delete");
        modernButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modernButton1ActionPerformed(evt);
            }
        });

        modernButton2.setText("Search");
        modernButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modernButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Ingredient");

        jLabel3.setText("Quantity");

        jLabel4.setText("Category");

        jLabel5.setText("Menu");

        javax.swing.GroupLayout panelBorder3Layout = new javax.swing.GroupLayout(panelBorder3);
        panelBorder3.setLayout(panelBorder3Layout);
        panelBorder3Layout.setHorizontalGroup(
            panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelBorder3Layout.createSequentialGroup()
                        .addComponent(ingredientAddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(ingredientUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(panelBorder3Layout.createSequentialGroup()
                        .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(24, 24, 24)
                        .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ingredientTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(qtyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder3Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(modernButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(modernButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 123, Short.MAX_VALUE))
                    .addGroup(panelBorder3Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(categoryComboBox, 0, 283, Short.MAX_VALUE)
                            .addComponent(menuComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        panelBorder3Layout.setVerticalGroup(
            panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder3Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ingredientTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(qtyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(menuComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ingredientUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ingredientAddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modernButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modernButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelBorder2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelBorder3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(232, Short.MAX_VALUE))
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
        );

        jScrollPane2.setViewportView(panelBorder1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 903, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ingredientAddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingredientAddBtnActionPerformed
        String ingredient = ingredientTextField.getText();
        String category = categoryComboBox.getSelectedItem().toString();
        String quantity = qtyTextField.getText();
        List<String> menuList = menuComboBox.getSelectedItems();
//        String menu = menuComboBox.getSelectedItem().toString();
        
        if(!"".equals(ingredient) && !"".equals(category) && !"".equals(quantity)){
            if(this.ingredient.checkDuplicate(ingredient)){
                this.ingredient.add(ingredient,category,quantity,menuList);
                setIngredientTbl(this.ingredient.getAll());
                ingredientID = -1;
                JOptionPane.showMessageDialog(this, "Item successfully added.");
                clearFields(); 
            }else{
                JOptionPane.showMessageDialog(this, "Item has already been added.");
            }                 
        }else{
            System.out.println("empty field detected");
            JOptionPane.showMessageDialog(this, "Please fill-up all fields.");
        }    
    }//GEN-LAST:event_ingredientAddBtnActionPerformed

    private void ingredientUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingredientUpdateBtnActionPerformed
        String ingredient = ingredientTextField.getText();
        String category = categoryComboBox.getSelectedItem().toString();
        int quantity=Integer.parseInt(qtyTextField.getText());
        List<String> menuList = menuComboBox.getSelectedItems();
        
        if(!"".equals(ingredient) && !"".equals(category) && ingredientID != -1){
            this.ingredient.update(ingredientID,ingredient,category,quantity,menuList);
            setIngredientTbl(this.ingredient.getAll());
            ingredientID = -1;
            JOptionPane.showMessageDialog(this, "Item successfully updated.");
            clearFields();
        }else{
            System.out.println("empty field detected");
            JOptionPane.showMessageDialog(this, "Please fill-up all fields.");
        }  
    }//GEN-LAST:event_ingredientUpdateBtnActionPerformed

    private void modernButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modernButton2ActionPerformed
        String ingredient = ingredientTextField.getText();
        String category = categoryComboBox.getSelectedItem().toString();
        List<String> menuList = menuComboBox.getSelectedItems();
        
        ResultSet searchResult = this.ingredient.search(ingredient, category, menuList);
        setIngredientTbl(searchResult);
    }//GEN-LAST:event_modernButton2ActionPerformed

    private void modernButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modernButton1ActionPerformed
        if(ingredientID != -1){
            int response = JOptionPane.showConfirmDialog(null, 
            "Are you sure you want to delete this item?", 
            "Warning", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.WARNING_MESSAGE);

            if (response == JOptionPane.YES_OPTION){
                ingredient.delete(ingredientID);
                setIngredientTbl(ingredient.getAll());
                ingredientID = -1;
                clearFields();
            }           
        }else{
            System.out.println("No selected field");
        }    
    }//GEN-LAST:event_modernButton1ActionPerformed

    private void ingredientTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingredientTblMouseClicked
        // TODO add your handling code here:
        int selectedRow = ingredientTbl.getSelectedRow();
        ingredientID = Integer.parseInt(ingredientTbl.getValueAt(selectedRow, 0).toString());
        ingredientTextField.setText(ingredientTbl.getValueAt(selectedRow, 1).toString());
        categoryComboBox.setSelectedItem(ingredientTbl.getValueAt(selectedRow, 2).toString());
        qtyTextField.setText(ingredientTbl.getValueAt(selectedRow, 3).toString());
//        menuComboBox.setSelectedItem(ingredientTbl.getValueAt(selectedRow, 4).toString());
    }//GEN-LAST:event_ingredientTblMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> categoryComboBox;
    private com.raven.swing.ModernButton ingredientAddBtn;
    private com.raven.swing.Table ingredientTbl;
    private javax.swing.JTextField ingredientTextField;
    private com.raven.swing.ModernButton ingredientUpdateBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.raven.swing.MultiSelectComboBox menuComboBox;
    private com.raven.swing.ModernButton modernButton1;
    private com.raven.swing.ModernButton modernButton2;
    private com.raven.swing.PanelBorder panelBorder1;
    private com.raven.swing.PanelBorder panelBorder2;
    private com.raven.swing.PanelBorder panelBorder3;
    private javax.swing.JTextField qtyTextField;
    private com.raven.swing.TimePicker timePicker1;
    // End of variables declaration//GEN-END:variables
}
